x-airflow-environment: &airflow-environment
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__CORE__LOAD_EXAMPLES: "True"
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
  AIRFLOW__CORE__FERNET_KEY: FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
  AIRFLOW__DAG_DEFAULT_VIEW: graph
  AIRFLOW__WEBSERVER__RBAC: "True"  # Habilitar la autenticación RBAC para el servidor web de Airflow 2.x
  AIRFLOW__API__ENABLE_CORS: "True"  # Permitir CORS en el API REST
  AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"  # Autenticación básica para el API REST

services:
  postgres:
    image: postgres:11.5
    environment:
      POSTGRES_USER: airflow
      POSTGRES_DB: airflow
      POSTGRES_PASSWORD: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data

  init:
    image: apache/airflow:2.5.0  # Usamos una versión reciente de Airflow 2.x
    environment:
      <<: *airflow-environment
    depends_on:
      - postgres
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
    entrypoint: /bin/bash
    command: >
      -c "airflow db upgrade && airflow users create --username airflow --password airflow --firstname airflow --lastname airflow --email airflow@airflow.com --role Admin"
    restart: on-failure

  webserver:
    image: apache/airflow:2.5.0  # Usamos la versión 2.x de Airflow
    ports:
      - 8080:8080
    environment:
      <<: *airflow-environment
    depends_on:
      - init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
    entrypoint: /bin/bash
    command: -c "airflow webserver"
    restart: always

  scheduler:
    image: apache/airflow:2.5.0  # Usamos la versión 2.x de Airflow
    environment:
      <<: *airflow-environment
    depends_on:
      - webserver
    volumes:
      - ./dags:/opt/airflow/dags
      - ./plugins:/opt/airflow/plugins
      - ./logs:/opt/airflow/logs
    entrypoint: /bin/bash
    command: -c "airflow scheduler"
    restart: always

volumes:
  postgres_data:
